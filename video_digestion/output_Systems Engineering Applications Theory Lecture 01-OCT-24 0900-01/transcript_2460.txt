[2460s - 2520s]
Because one of the problems that we have with teaching systems engineering is this way, is that the process isn't linear. And it will develop, we will link in, so there's loads of links between requirements of validation and verification, and we will pick those up as we go. We need to be aware of that when developing our own systems as well. So when developing and implementing your approach, it can get a little bit chicken and egg. What comes first? Do I pick an approach and then make sure that the system context fits? Do I understand the system context and make sure the approach fits? Which tool do I pick first? If I pick this one, then I can't have that one. All sorts of things like that. So you need to understand how those things fit together. Similar in terms of developing systems themselves. So when we're developing cars, do we develop the shape of the car first, or do we figure out what needs to go inside it first and then see what fits where? Unfortunately, as a human factors specialist, one of the things that really upsets me is quite often...